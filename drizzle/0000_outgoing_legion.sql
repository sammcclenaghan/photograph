CREATE TABLE IF NOT EXISTS "photograph_galleries" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "photograph_galleries_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256) NOT NULL,
	"description" varchar(265),
	"userId" varchar(256) NOT NULL,
	"cover_photo_url" varchar(256),
	"cover_color" varchar(7),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "photograph_gallery_collaborators" (
	"gallery_id" integer NOT NULL,
	"user_id" varchar(256) NOT NULL,
	"role" varchar(20) DEFAULT 'viewer' NOT NULL,
	"invited_by" varchar(256) NOT NULL,
	"email" varchar(256),
	"invited_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT "photograph_gallery_collaborators_gallery_id_user_id_pk" PRIMARY KEY("gallery_id","user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "photograph_images" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "photograph_images_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256) NOT NULL,
	"url" varchar(128) NOT NULL,
	"userId" varchar(256) NOT NULL,
	"gallery_id" integer NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "photograph_gallery_collaborators" ADD CONSTRAINT "photograph_gallery_collaborators_gallery_id_photograph_galleries_id_fk" FOREIGN KEY ("gallery_id") REFERENCES "public"."photograph_galleries"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "photograph_images" ADD CONSTRAINT "photograph_images_gallery_id_photograph_galleries_id_fk" FOREIGN KEY ("gallery_id") REFERENCES "public"."photograph_galleries"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "gallery_name_idx" ON "photograph_galleries" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "gallery_user_id_idx" ON "photograph_galleries" USING btree ("userId");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "gallery_collaborator_gallery_id_idx" ON "photograph_gallery_collaborators" USING btree ("gallery_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "gallery_collaborator_user_id_idx" ON "photograph_gallery_collaborators" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "image_name_idx" ON "photograph_images" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "image_user_id_idx" ON "photograph_images" USING btree ("userId");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "image_gallery_id_idx" ON "photograph_images" USING btree ("gallery_id");